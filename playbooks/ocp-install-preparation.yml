---
- name: OCP | Install OpenShift Ansible packages on installer
  hosts: localhost
  vars_files:
    - '../defaults/main.yml'
  become: yes
  tasks:
    - name: Install OpenShift Ansible packages
      package:
        name: "openshift-ansible*"
        state: latest
      tags:
        installer-prep
      when: ansible_facts['distribution'] == "RedHat"

    - name: Grab inventory file
      get_url:
        url: {{ocp_inventory}}
        dest: /tmp/ocp_inventory.ini
        force: yes

- name: OCP | Host Registration
  hosts: all
  become: yes
  vars_files:
    - '../defaults/main.yml'
  tasks:
    - name: Disable all repos
      command: "subscription-manager repos --disable '*'"

    - name: Enable Required repos
      command: "subscription-manager repos --enable {{ ocp_repositories[ocp_deployment_version | string] | join(' --enable ') }}"

      #with_items: "{{ ocp_repositories }}"

    - name: Install base packages
      package:
        name: "{{ item }}"
        state: latest
      with_items: "{{ ocp_deployment_packages }}"

    - name: Update all packages
      package:
        name: "*"
        state: latest

    - include_tasks: tasks/reboot.yml

    - name: Install docker
      package:
        name: docker
        state: latest

    - name: Verify docker is correct version
      command: docker version
      register: docker_version
      changed_when: False
      failed_when: not (docker_version.stdout | search("Version:\s*{{expected_docker_version}}") )

    - name: Set Docker insecure registery options
      lineinfile:
        dest: /etc/sysconfig/docker
        regexp: '^OPTIONS=.*'
        line: "OPTIONS='--selinux-enabled --insecure-registry 172.30.0.0/16'"

    - name: Configure Docker Storage
      copy:
        dest: /etc/sysconfig/docker-storage-setup
        content: |
          DEVS="{{ docker_device | default(lookup('vars', 'ocp_docker_storage')) }}"
          VG=docker-vg

    - name: Docker storage setup
      command: docker-storage-setup

    - name: Start and Enable docker
      service:
        name: docker
        state: started
        enabled: yes
